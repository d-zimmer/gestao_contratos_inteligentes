name: Build, Test, and Deploy Python App to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set environment variables for tests
        run: |
          echo "DJANGO_DB_NAME=test_db" >> $GITHUB_ENV
          echo "DJANGO_DB_USER=postgres" >> $GITHUB_ENV
          echo "DJANGO_DB_PASSWORD=postgres" >> $GITHUB_ENV
          echo "DJANGO_DB_HOST=localhost" >> $GITHUB_ENV
          echo "DJANGO_DB_PORT=5432" >> $GITHUB_ENV
          echo "DJANGO_ENV=test" >> $GITHUB_ENV

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run migrations for testing
        run: |
          source venv/bin/activate
          python manage.py migrate --settings=gestao_contratos_inteligentes.settings

      - name: Run tests with coverage
        run: |
          source venv/bin/activate
          coverage run --source='.' manage.py test --settings=gestao_contratos_inteligentes.settings
          coverage report
          coverage html
        
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Set environment variables for production
        run: |
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> $GITHUB_ENV
          echo "DJANGO_API_URL=https://gestaocontratosinteligentes-a3apaqfsc7b0abgh.brazilsouth-01.azurewebsites.net/api/" >> $GITHUB_ENV
          echo "PROD_DB_NAME=${{ secrets.PROD_DB_NAME }}" >> $GITHUB_ENV
          echo "PROD_DB_USER=${{ secrets.PROD_DB_USER }}" >> $GITHUB_ENV
          echo "PROD_DB_PASSWORD=${{ secrets.PROD_DB_PASSWORD }}" >> $GITHUB_ENV
          echo "PROD_DB_HOST=${{ secrets.PROD_DB_HOST }}" >> $GITHUB_ENV
          echo "PROD_DB_PORT=${{ secrets.PROD_DB_PORT }}" >> $GITHUB_ENV
          echo "DJANGO_ALLOWED_HOSTS=.azurewebsites.net" >> $GITHUB_ENV
          echo "DJANGO_DEBUG=True" >> $GITHUB_ENV  # Defina como True temporariamente para depuração

      - name: Apply Django migrations (prepare o banco para o deploy)
        run: |
          source venv/bin/activate
          python manage.py makemigrations
          python manage.py migrate

      - name: Collect static files (para o caso de arquivos estáticos no Django)
        run: |
          source venv/bin/activate
          python manage.py collectstatic --no-input

      - name: Package app for deployment
        run: |
          zip -r release.zip ./* -x "venv/*" "*.git*" "*.github*" "__pycache__/*"
        shell: bash

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'GestaoContratosInteligentes'
          package: release.zip
